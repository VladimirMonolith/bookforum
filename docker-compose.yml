# ports:
#   - 5445(это порт, который Вы можете посмотреть локально):5432(это порт в контейнере)
# для Postgres не меняйте правый порт - 5432, контейнеру нужен именно этот
# локально можно получить доступ к БД в контейнере с помощью PGAdmin,
# в нем укажите localhost и свой левый порт, в примере это - 5445

version: '3.8'
services:
  # nginx:
  #   build:
  #     context: .
  #     dockerfile: 'Dockerfile.nginx'
  #   container_name: app_nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   links:
  #     - app
  #     - flower
  db:
    image: postgres:16
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env_docker
    ports:
      - 5445:5432

  redis:
    image: redis:7
    container_name: redis
    depends_on:
      - db
    env_file:
      - .env_docker
    ports:
      - 6379:6379

  app:
    build:
      context: .
    container_name: app
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env_docker
    command: [ '/bookforum/docker/app.sh' ]
    # command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    # закомментируйте порты, если используете nginx
    ports:
      - 7777:8000

  celery:
    build:
      context: .
    container_name: celery
    command: [ '/bookforum/docker/celery.sh', 'celery' ]
    # command: sh -c "celery --app=app.tasks.celery_config:celery worker -l INFO"
    depends_on:
      - redis
      - app
    env_file:
      - .env_docker

  flower:
    build:
      context: .
    container_name: flower
    command: [ '/bookforum/docker/celery.sh', 'flower' ]
    # command: sh -c "celery --app=app.tasks.tasks:celery flower"
    depends_on:
      - redis
      - app
      - celery
    env_file:
      - .env_docker
    # закомментируйте порты, если используете nginx
    ports:
      - 5555:5555

  # закомментируйте prometheus, если используете nginx    
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
  
  # закомментируйте grafana, если используете nginx 
  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  postgres_data:
    grafana_data:
    prometheus_data:
